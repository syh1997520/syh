package com.qlgshopping.service;

import java.util.List;

import com.qlgshopping.dao.OrderTableDao;
import com.qlgshopping.entity.OrderTable;

public class OrderTableService {
  OrderTableDao oDao=new OrderTableDao();
  /**
	 * 查询所有的方法
	 * @return
	 */
	public List<OrderTable> selectAllOrderTable(){
	   return oDao.selectAllOrderTable();
	}
	/**
	 * 根据ordId删除数据
	 * @param ordId
	 * @return
	 */
	public boolean deleteOrderTable(int ordId){
		if(oDao.deleteOrderTable(ordId)>0){
			return true;
		}
		return false;
	}
	/**
	 * 将对象插入到数据库
	 * @param ord
	 * @return
	 */
	public boolean insertOrdId(OrderTable ord){
		if(oDao.insertOrdId(ord)>0){
			return true;
		}
		return false;
	}

	/**
	 * 修改订单信息
	 * @param ord
	 * @return
	 */
	public boolean updatePayTimeStatic(OrderTable ord){
		if(oDao.updatePayTimeStatic(ord)>0){
			return true;
		}
		return false;
	}
	/**
	 * 根据ordId删除数据
	 * @param ordId
	 * @return
	 */
	public OrderTable selectByOrderId(int ordId){
		return oDao.selectByOrderId(ordId);
	}
	/**
	 * 根据店铺id获取订单
	 * @param ordId
	 * @return
	 */
	public List<OrderTable> selectByStoId(int ordId){
		return oDao.selectByStoId(ordId);
	}
	
	/**
	 * 根据用户id获取订单
	 * @param ordId
	 * @return
	 */
	public List<OrderTable> selectByUserId(int userId){
		return oDao.selectByUserId(userId);
	}
	
	/**
	 * 根据用户id和订单获取订单
	 * @param ordId
	 * @return
	 */
	public List<OrderTable> selectByUserIdAndOrdStatic(int userId,String ordStatic){
	return oDao.selectByUserIdAndOrdStatic(userId, ordStatic);
	}
}
