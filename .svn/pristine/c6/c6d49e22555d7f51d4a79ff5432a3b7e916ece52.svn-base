package com.qlgshopping.controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.google.gson.Gson;
import com.qlgshopping.entity.Admin;
import com.qlgshopping.entity.Business;
import com.qlgshopping.entity.OrderTable;
import com.qlgshopping.entity.Page;
import com.qlgshopping.entity.Product;
import com.qlgshopping.entity.Store;
import com.qlgshopping.entity.UserInfo;
import com.qlgshopping.service.AdminService;
import com.qlgshopping.service.BusinessService;
import com.qlgshopping.service.ProductService;
import com.qlgshopping.service.StoreService;

public class BusinessServlet extends HttpServlet {
    StoreService sSer=new StoreService();
    ProductService pSer=new ProductService();
    BusinessService bSer=new BusinessService();
    AdminService adSe=new AdminService();
	/**
	 * Constructor of the object.
	 */
	public BusinessServlet() {
		super();
	}

	/**
	 * Destruction of the servlet. <br>
	 */
	public void destroy() {
		super.destroy(); // Just puts "destroy" string in log
		// Put your code here
	}

	/**
	 * The doGet method of the servlet. <br>
	 *
	 * This method is called when a form has its tag value method equals to get.
	 * 
	 * @param request the request send by the client to the server
	 * @param response the response send by the server to the client
	 * @throws ServletException if an error occurred
	 * @throws IOException if an error occurred
	 */
	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		this.doPost(request, response);
	}

	/**
	 * The doPost method of the servlet. <br>
	 *
	 * This method is called when a form has its tag value method equals to post.
	 * 
	 * @param request the request send by the client to the server
	 * @param response the response send by the server to the client
	 * @throws ServletException if an error occurred
	 * @throws IOException if an error occurred
	 */
	public void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

	String op=request.getParameter("op");
	if(op.equals("query")){
		this.query(request, response);
	}else if(op.equals("adds")){
		this.adds(request, response);
	}
	else if(op.equals("querySto")){
		this.querySto(request, response);
	}else if(op.equals("queryPro")){
		this.queryPro(request, response);
	}else if(op.equals("queryBus")){
		this.queryBus(request, response);
	}else if(op.equals("backlogin")){
		backLogin(request, response);
	}
	}
	/**
	 * 后台的登录
	 * @param request
	 * @param response
	 * @throws IOException 
	 * @throws ServletException 
	 */
	public void backLogin(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException{
	 int choice=Integer.parseInt(request.getParameter("choice"));
	 String loginname=request.getParameter("username");
	 String pwd=request.getParameter("userpwd");
	 System.out.println(choice);
	 if(choice==2){
		 Business selectBusByLnameAndPwd = bSer.selectBusByLnameAndPwd(loginname, pwd);
		 if(selectBusByLnameAndPwd==null){
			 request.setAttribute("loginmsg", "用户名或密码错误");
			 request.getRequestDispatcher("login.jsp").forward(request, response);
			 return;
		 }
		 else{
			 request.getSession().setAttribute("business", selectBusByLnameAndPwd);
			 response.sendRedirect("business.jsp");
		 }
	 }
	 else{
		 Admin selectByLoginNamePassword = adSe.selectByLoginNamePassword(loginname, pwd);
		 System.out.println(selectByLoginNamePassword);
		 if(selectByLoginNamePassword==null){
			 request.setAttribute("loginmsg", "用户名或密码错误");
			 request.getRequestDispatcher("login.jsp").forward(request, response);
			 return;
		 }
		 else{
			 request.getSession().setAttribute("admin", selectByLoginNamePassword);
			 response.sendRedirect("admin.jsp");
		 }
	 }
	}
	
	public void adds(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
			Store sto = new Store();
			
			String stoName = request.getParameter("stoName");
			sto = sSer.selectBystoName(stoName);
			if(sto!=null){
				request.setAttribute("stoMsg", "名字重复了");
				request.getRequestDispatcher("add_store.html").forward(request, response);
				return;
			}
			int stoTransNumber = Integer.parseInt(request.getParameter("stoTransNumber"));
			int stoScore = Integer.parseInt(request.getParameter("stoScore"));
			int stoType = Integer.parseInt(request.getParameter("stoType"));
			String stoPhone = request.getParameter("stoPhone");
			String stoAddress = request.getParameter("stoAddress");
			String stoStatic = request.getParameter("stoStatic");
			
			sto = new Store();
			
			sto.setStoName(stoName);
			sto.setStoTransNumber(stoTransNumber);
			sto.setStoScore(stoScore);
			sto.setStoType(stoType);
			sto.setStoPhone(stoPhone);
			sto.setStoAddress(stoAddress);
			sto.setStoStatic(stoStatic);
			System.out.println("xs"+sto);
			if(sSer.insertStor(sto)){
				System.out.println("新增成功");
			}else{
				System.out.println("新增失败");
			}
			
			response.sendRedirect("busstore.jsp");
			
			this.query(request, response);
		
	}
	
	public void queryBus(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
	
		int currentPage=1;
		int pageSize=5;
		
		String strcurrentPage=request.getParameter("currentPage");
		if(strcurrentPage!=null&&!"".equals(strcurrentPage)){
			currentPage=Integer.parseInt(strcurrentPage);
		}
		String strpageSize=request.getParameter("pageSize");
		if(strpageSize!=null&&!"".equals(strpageSize)){
			pageSize=Integer.parseInt(strpageSize);
		}
		
		Page<Business> page=bSer.getPage(currentPage, pageSize);
		Gson gson=new Gson();
		String gs=gson.toJson(page);
		response.getWriter().println(gs);
		
	}
	
	
	
	
	
	
	
	
	
	public void queryPro(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
	
		String stoName=request.getParameter("stoName");
		if(stoName==null&&"".equals(stoName)){
			return;
		}
		
		Store store=sSer.selectBystoName(stoName);
		int stoId=store.getStoId();
		ArrayList<Product> pList=pSer.selectProductByStoId(stoId);
		
		Gson gson=new Gson();
		String gs=gson.toJson(pList);
		response.getWriter().println(gs);
		
	}
	
	public void querySto(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		Business business =(Business)request.getSession().getAttribute("business");
		int busId=business.getBusId();
		
		ArrayList<Store> aList=sSer.selectByBusId(busId);
		
		
		int length=aList.size();
		

	
		
		
		request.setAttribute("aList", aList);
		request.setAttribute("length", length);
		request.getRequestDispatcher("businessproduct.jsp").forward(request, response);
	}
	public void query(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		Business business =(Business)request.getSession().getAttribute("business");
		int currentPage=1;
		int busId=business.getBusId();
		int pageSize=10;
		String strCurrentPage=request.getParameter("currentPage");
		if(strCurrentPage!=null&&!"".equals(strCurrentPage)){
			currentPage=Integer.parseInt(strCurrentPage);	
		}
		String strPageSize=request.getParameter("pageSize");
		if(strPageSize!=null&&!"".equals(strPageSize)){
			pageSize=Integer.parseInt(strPageSize);
		}
		Page<Store> page=sSer.getPage(busId,currentPage, pageSize);
		
		Gson gson=new Gson();
		String gs=gson.toJson(page);
		response.getWriter().println(gs);
	}

	/**
	 * Initialization of the servlet. <br>
	 *
	 * @throws ServletException if an error occurs
	 */
	public void init() throws ServletException {
		// Put your code here
	}

}
